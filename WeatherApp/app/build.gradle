apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'

android {
    signingConfigs {
        release {
            storeFile file('D:\\GeekBrains\\WeatherApp\\keystore\\keystore.jks')
            storePassword '1qaz2wsx##'
            keyAlias = 'weatherapp-key0'
            keyPassword 'weatherApp2020!'
        }
    }
    compileSdkVersion 28
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "ru.magzyumov.weatherapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 4
        versionName "1.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def weatherApiKey = properties.getProperty("weather_api_key", "")
        it.buildConfigField "String", "WEATHER_API_KEY", weatherApiKey
        def placesApiKey = properties.getProperty("places_api_key", "")
        it.buildConfigField "String", "PLACES_API_KEY", placesApiKey
        def fcmServerKey = properties.getProperty("fcm_server_key", "")
        it.buildConfigField "String", "FCM_SERVER_KEY", fcmServerKey
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    flavorDimensions 'version'
    productFlavors {
        adminVersion {
            dimension = 'version'
            versionNameSuffix = '.admin'
            applicationIdSuffix = '.admin'
        }
        freeVersion {
            dimension = 'version'
            versionNameSuffix = '.free'
            applicationIdSuffix = '.free'
        }
        paidVersion {
            dimension = 'version'
            versionNameSuffix = '.paid'
            applicationIdSuffix = '.paid'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.firebase:firebase-database:19.3.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.0'
    implementation 'com.google.firebase:firebase-analytics:17.4.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.1'
    implementation 'com.google.android.libraries.places:places:2.3.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'

    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation "android.arch.persistence.room:runtime:1.1.1"

    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
apply plugin: 'com.google.gms.google-services'

